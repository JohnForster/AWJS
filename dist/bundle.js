!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";e.r(n);var r,i,o,a,u=function(){function t(t){this.canvas=this.setupCanvas(),this.context=this.canvas.getContext("2d"),this.cachedCanvas=document.createElement("canvas"),this.sprites=t.data.sprites}return t.prototype.render=function(n){var e=this;return n?(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),n.gridElements&&n.gridElements.forEach(function(t,n){t.forEach(function(t,r){if(void 0!==t){var i=e.sprites[t],o=16*r+(i.ax||0),a=16*n+(i.ay||0);e.context.putImageData(i.imageData,o+8,a+8)}})}),n.nonGridElements&&n.nonGridElements.forEach(function(t){var n=e.sprites[t.id],r=16*t.x+(n.ax||0),i=16*t.y+(n.ay||0);e.context.putImageData(n.imageData,r+8,i+8)}),this.cachedCanvas=t.cloneCanvas(this.canvas),this.canvas):this.cachedCanvas},t.cloneCanvas=function(t){var n=document.createElement("canvas"),e=n.getContext("2d");return n.width=t.width,n.height=t.height,e.drawImage(t,0,0),n},t.prototype.setupCanvas=function(){var t=document.createElement("canvas");return t.height=600,t.width=800,t},t}(),c=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)},function(t,n){function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return c(n,t),n}(u),f=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),h=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return f(n,t),n}(u),p=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),l=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return p(n,t),n}(u),d=function(){function t(){}return t.getTerrainScreenObjects=function(t){return{gridElements:t.terrain.mapIdGrid}},t.getUnitsScreenObjects=function(t){var n=[];return t.units.forEach(function(t){n[t.gridPosX][t.gridPosX]=t.id}),{gridElements:n}},t}(),y=function(){function t(t,n,e){this.logicModel=t,this.uiModel=n,this.mainCanvas=this.setupMainCanvas(),this.mainContext=this.mainCanvas.getContext("2d"),this.bgRenderer=new s(e.terrain),this.uiRenderer=new h(e.ui),this.unitRenderer=new l(e.units)}return t.prototype.render=function(){var t=this.getGameState(),n=d.getTerrainScreenObjects(t),e=d.getUnitsScreenObjects(t),r=this.renderGame(n,e),i=r[0],o=r[1],a=this.getUIState(),u=this.renderUI(a);this.paintToMainCanvas(i,o,u)},t.prototype.paintToMainCanvas=function(){for(var t=this,n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];this.mainContext.clearRect(0,0,this.mainCanvas.width,this.mainCanvas.height),n.forEach(function(n){t.mainContext.drawImage(n,0,0)})},t.prototype.renderGame=function(t,n){return[this.bgRenderer.render(t),this.unitRenderer.render(n)]},t.prototype.renderUI=function(t){return this.uiRenderer.render(t)},t.prototype.getGameState=function(){return this.logicModel.getState()},t.prototype.getUIState=function(){return this.uiModel.getState()},t.prototype.setupMainCanvas=function(){var t=document.getElementById("canvas");return t.height=600,t.width=800,t},t}(),v=function(){function t(t){this.keyMappings={w:"up",s:"down",a:"left",d:"right"," ":"A"},this.uiModel=t,document.onkeypress=this.handleKeyPress.bind(this)}return t.prototype.handleKeyPress=function(t){var n=this.keyMappings[t.key.toLowerCase()];n&&this.uiModel.send(n)},t}(),m=function(){function t(t,n,e){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];this.instructions={up:function(){},down:function(){},left:function(){},right:function(){},A:function(){},B:function(){},L:function(){},R:function(){},start:function(){},select:function(){}},this.position={x:t,y:n,z:e},this.init(r)}return t.prototype.init=function(t){},t.prototype.sendInstruction=function(t){this.instructions[t]()},t}(),g=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),w=function(t){function n(){var n=null!==t&&t.apply(this,arguments)||this;return n.name="cursor",n.id=0,n.instructions={up:function(){n.moveUp()},down:function(){n.moveDown()},left:function(){n.moveLeft()},right:function(){n.moveRight()},A:function(){},B:function(){},L:function(){},R:function(){},start:function(){},select:function(){}},n}return g(n,t),n.prototype.moveUp=function(t){void 0===t&&(t=1),this.position.y>0&&(this.position.y-=t)},n.prototype.moveDown=function(t){void 0===t&&(t=1),this.position.y+=t},n.prototype.moveLeft=function(t){void 0===t&&(t=1),this.position.x>0&&(this.position.x-=t)},n.prototype.moveRight=function(t){void 0===t&&(t=1),this.position.x+=t},n}(m),b=function(){function t(t){this.currentUIState={gridElements:Array.from(Array(32),function(t){return Array(32)})},this.objects=[],console.log(this.currentUIState),this.gameState=t.getState(),this.cursor=this.create(w,{x:0,y:0,z:0}),this.select(this.cursor),this.refreshState()}return t.prototype.send=function(t){this.selectedObject.sendInstruction(t);var n=this.selectedObject.position,e=n.x,r=n.y;this.refreshState(),this.currentUIState.gridElements[r][e]=this.selectedObject.id},t.prototype.create=function(t,n,e){var r=new t(n.x,n.y,n.z);return e&&e(r),this.objects.push(r),r},t.prototype.refreshState=function(){var t=this;this.currentUIState.gridElements=Array.from(Array(32),function(t){return Array(32)}),this.objects=this.objects.sort(function(t,n){return t.position.z-n.position.z}),this.objects.forEach(function(n){var e=n.position,r=e.x,i=e.y;t.currentUIState.gridElements[i][r]=n.id})},t.prototype.getState=function(){return this.currentUIState},t.prototype.select=function(t){this.selectedObject=t||this.cursor},t}(),x=function(){function t(){}return t.prototype.getState=function(){},t}(),_=function(){return function(){}}(),S=function(){function t(t,n,e,r){this.loadedUnits=[],this.hidden=!1,this.type=t,this.playerId=n,this.gridPosX=e,this.gridPosY=r,this.currentHealth=t.totalHealth,this.currentFuel=t.maxFuel,this.currentAmmo=t.maxAmmo}return t.prototype.destroy=function(){this.gridPosX=this.gridPosY=this.currentAmmo=this.currentFuel=this.currentHealth=-1},t.prototype.damage=function(t){this.currentHealth-=t,this.currentHealth<0&&this.destroy()},t}();!function(t){t[t.infantary=0]="infantary",t[t.vehicle=1]="vehicle",t[t.helicopter=2]="helicopter",t[t.plane=3]="plane",t[t.ship=4]="ship",t[t.submarine=5]="submarine"}(i||(i={})),function(t){t[t.direct=0]="direct",t[t.indirect=1]="indirect"}(o||(o={})),function(t){t[t.capture=0]="capture",t[t.dive=1]="dive",t[t.load=2]="load"}(a||(a={}));var O={id:4,name:"tank",totalHealth:100,type:i.vehicle,visionRange:3,movementRange:5,maxFuel:80,maxAmmo:8,weapons:{primary:{name:"cannon",type:o.direct,baseDamage:70,efficacy:{infantary:1,vehicle:1,helicopter:1,plane:1,ship:1,submarine:1}}},abilities:[]},I=new _,j=function(){function t(){this.logicModel=new x}return t.prototype.getState=function(){return{gameID:1,numberOfPlayers:1,players:[{id:0,player:I,money:1e3,color:"orange"}],terrain:{sizeX:5,sizeY:5,mapIdGrid:[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]]},units:[new S(O,0,2,2),new S(O,0,2,3),new S(O,0,5,3),new S(O,0,4,4)]}},t}(),P=function(t,n,e,r){return new(e||(e=Promise))(function(i,o){function a(t){try{c(r.next(t))}catch(t){o(t)}}function u(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){t.done?i(t.value):new e(function(n){n(t.value)}).then(a,u)}c((r=r.apply(t,n||[])).next())})},C=function(t,n){var e,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(t,a)}catch(t){o=[6,t],r=0}finally{e=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},E=function(){function t(){}return t.load=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return P(this,void 0,void 0,function(){var e=this;return C(this,function(r){return n.forEach(function(n){return P(e,void 0,void 0,function(){var e,r,i,o;return C(this,function(a){switch(a.label){case 0:return[4,t.addImageProcess(n.path)];case 1:for(i in e=a.sent(),r=t.getContext(e),n.data.sprites)(o=n.data.sprites[i]).imageData=t.getImageData(o,r);return[2]}})})}),[2]})})},t.getContext=function(n){var e=t.setupCanvas(n).getContext("2d");return e.drawImage(n,0,0),e},t.setupCanvas=function(t){var n=document.createElement("canvas");return n.width=t.width,n.height=t.height,n},t.addImageProcess=function(t){return new Promise(function(n,e){var r=new Image;r.onload=function(){return n(r)},r.onerror=function(t){return e(t)},r.src=t})},t.getImageData=function(t,n){var e=t.x,r=t.y,i=t.w,o=t.h;return n.getImageData(e,r,i,o)},t}(),M={path:"assets/terrain/spriteSheet.png",data:{type:"terrain",sprites:{0:{name:"sea",x:340,y:1567,w:16,h:16},1:{name:"grass",x:217,y:1567,w:16,h:16}}}},A={path:"assets/ui/UISprites.png",data:{type:"UI",sprites:{0:{name:"cursor",x:44,y:6,w:28,h:31,ax:-3,ay:-3}}}},U={path:"assets/units/unitSprites.png",data:{type:"units",sprites:{0:{name:"infantary_orange",x:24,y:4,w:14,h:15,ax:0,ay:1},4:{name:"tank_orange",x:96,y:6,w:13,h:13,ax:1,ay:3}}}},k=function(t,n,e,r){return new(e||(e=Promise))(function(i,o){function a(t){try{c(r.next(t))}catch(t){o(t)}}function u(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){t.done?i(t.value):new e(function(n){n(t.value)}).then(a,u)}c((r=r.apply(t,n||[])).next())})},R=function(t,n){var e,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(t,a)}catch(t){o=[6,t],r=0}finally{e=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},D=function(){function t(){this.logicModel=new j,this.uiModel=new b(this.logicModel),this.view=new y(this.logicModel,this.uiModel,{terrain:M,ui:A,units:U}),this.controller=new v(this.uiModel),this.performAsyncSetup()}return t.prototype.performAsyncSetup=function(){return k(this,void 0,void 0,function(){return R(this,function(t){switch(t.label){case 0:return[4,Promise.all([E.load(M,A,U)])];case 1:return t.sent(),this.runGame(),[2]}})})},t.prototype.runGame=function(){var t=this;setInterval(function(){t.view.render()},1e3/30)},t}();(new(function(){function t(){}return t.prototype.run=function(){new D},t}())).run()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,